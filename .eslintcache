[{"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\index.tsx":"1","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\reportWebVitals.ts":"2","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\App.tsx":"3","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\loadTiles.tsx":"4","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\BingoItemRepository.js":"5","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\gameBoard.tsx":"6","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\checkWin.tsx":"7","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\reset.tsx":"8","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\newItemInput.tsx":"9","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\about.tsx":"10","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\RankSelector.js":"11","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\winScreen.tsx":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2121,"mtime":1608423888253,"results":"16","hashOfConfig":"14"},{"size":3438,"mtime":1608418716001,"results":"17","hashOfConfig":"14"},{"size":2032,"mtime":1608419069743,"results":"18","hashOfConfig":"14"},{"size":1554,"mtime":1608424177575,"results":"19","hashOfConfig":"14"},{"size":1430,"mtime":1608422748918,"results":"20","hashOfConfig":"14"},{"size":543,"mtime":1608403347792,"results":"21","hashOfConfig":"14"},{"size":1628,"mtime":1608418454925,"results":"22","hashOfConfig":"14"},{"size":1126,"mtime":1608423920791,"results":"23","hashOfConfig":"14"},{"size":1030,"mtime":1594323811197,"results":"24","hashOfConfig":"14"},{"size":791,"mtime":1608423577434,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"26iccb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\index.tsx",[],["59","60"],"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\reportWebVitals.ts",[],"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\App.tsx",["61"],"import React, { useState } from 'react';\nimport bgvid from './components/images/dropshotbg.mp4';\nimport './App.css';\nimport IItem from './components/structuers/tileItem';\nimport IAddedItem from './components/structuers/addedItem';\nimport loadTiles from './components/loadTiles';\nimport GameBoard from './components/gameBoard';\nimport reset from './components/reset';\nimport NewItemInput from './components/newItemInput';\nimport About from './components/about';\nimport RankSelector from './components/RankSelector'\n\nfunction App() {\n  const [items, setItems] = useState<IItem[][]>();\n  const [addedItems, setAddedItems] = useState<IAddedItem[]>([]);//user added items\n  const [rankSelected, setRankSelected] = useState(0);\n    \n    const loadItems = () => {\n        //loads tiles into items\n        setItems(loadTiles(addedItems, rankSelected))\n    }\n    const testFunc = () => {\n        console.log(addedItems);\n    }\n    function handleAdded(newValue: IAddedItem) {\n        // gets called when user adds a new tile\n        setAddedItems([...addedItems, newValue])\n    }\n    function handleChecked(id: any) {\n        // gets called from newUserInput.tsx when checkbox is clicked\n        addedItems[id].use = !addedItems[id].use\n        setAddedItems(addedItems);\n    }\n    function handleRankChange(value: number) {\n        setRankSelected(value);\n    }\n\n\n\n    return (\n        <div>\n          <video autoPlay={true} loop={true} muted={true} id=\"bgVid\">\n             <source src={bgvid} type=\"video/mp4\" />\n          </video>\n          <div id=\"leftDiv\">\n              <h2>This is Rocket League Bingo!</h2>\n              <button onClick={loadItems}>Create Board</button>\n              <button onClick={() => reset(items)}>Reset</button>\n              <RankSelector onRankSelected={handleRankChange}/>\n              {/* <button onClick={testFunc}>TEST BUTTON</button> */}\n              <NewItemInput onAdd={handleAdded} onCheck={handleChecked}/>\n              <About />\n          </div>\n          <div id=\"rightDiv\">\n            <GameBoard boardTiles={items}/>\n          </div>\n       </div>\n    )\n }\n\nexport default App;\n","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\loadTiles.tsx",["62","63","64","65","66","67"],"import { defaultCipherList } from 'constants';\r\nimport React from 'react';\r\nimport { GetBingoTileItems } from './BingoItemRepository';\r\nimport IAddedItem from './structuers/addedItem'\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction loadTiles(addedTiles: IAddedItem[] | undefined, rankSelected: number) {\r\n   \r\n    // defining the array like this is the only way it works, idk why, just dont look at it\r\n    let items: IItem[][] = [\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n    ]\r\n    \r\n    // array of strings\r\n    var availableTiles = GetBingoTileItems(rankSelected);\r\n    var usedIndex: number[] = [];\r\n    var usedIndexLoad: number[] = [];\r\n    let tileArr = []; // tiles to added to board\r\n    \r\n    \r\n    // for user added tiles\r\n    if (addedTiles) {\r\n        for (var i=0; i<addedTiles.length; i++) {\r\n            \r\n            if (addedTiles[i].use) {\r\n                tileArr.push(addedTiles[i].value);\r\n            }\r\n        } \r\n    }\r\n    console.log(addedTiles);\r\n\r\n    // if user added tiles have already been added to addedTiles\r\n    var insertAmt = 24 - tileArr.length;\r\n    for (i=0; i<insertAmt; i++) {\r\n        do\r\n        {\r\n            var index = Math.floor(Math.random() * availableTiles.length);\r\n        } while (usedIndexLoad.includes(index));\r\n        usedIndexLoad.push(index);\r\n        tileArr.push(availableTiles[index]);\r\n    }\r\n\r\n    // i is col, j is row\r\n    for (var i = 0; i < 5; i++) {\r\n        for (var j = 0; j < 5; j++) {\r\n            if (i != 2 || j != 2) {\r\n                do\r\n                {\r\n                    var index = Math.floor(Math.random() * tileArr.length);\r\n                } while (usedIndex.includes(index));\r\n                usedIndex.push(index);\r\n                items[i][j].value = tileArr[index];\r\n                items[i][j].colIndex = i;\r\n                items[i][j].rowIndex = j;\r\n            }\r\n        }\r\n    }\r\n\r\n    items[2][2].value = \"Free\";\r\n    items[2][2].marked = false;\r\n    items[2][2].colIndex = 2;\r\n    items[2][2].rowIndex = 2;\r\n\r\n    return items;\r\n}\r\n\r\n\r\nexport default loadTiles;","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\BingoItemRepository.js",[],["68","69"],"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\gameBoard.tsx",[],"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\checkWin.tsx",["70"],"import React from 'react';\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction checkWin(gameBoard: IItem[][]) {\r\n    var pass=false;\r\n    \r\n    //horizontal check\r\n    for (var i=0; i<5; i++) {\r\n        for (var j=0; j<5; j++) {\r\n            if (gameBoard[i][j].marked) {\r\n                pass=true;\r\n            }\r\n            else {\r\n                pass=false;\r\n                break;\r\n            }\r\n        }\r\n        if (pass) {\r\n            return pass;\r\n        }\r\n    }\r\n\r\n    //vertical check\r\n    for (i=0; i<5; i++) {\r\n        for (j=0; j<5; j++) {\r\n            if (gameBoard[j][i].marked) {\r\n                pass=true;\r\n            }\r\n            else {\r\n                pass=false;\r\n                break;\r\n            }\r\n        }\r\n        if (pass) {\r\n            return pass;\r\n        }\r\n    }\r\n\r\n    //diagonal check - left to right\r\n    for (i=0; i<5; i++) {\r\n        if (gameBoard[i][i].marked) {\r\n            pass=true;\r\n        }\r\n        else {\r\n            pass=false;\r\n            break;\r\n        }\r\n    }\r\n    if (pass) {\r\n        return pass;\r\n    }\r\n\r\n    //diagonal check - right to left\r\n    j = 4;\r\n    for (i=0; i<5; i++) {\r\n        if (gameBoard[i][j].marked) {\r\n            pass=true;\r\n            j--;\r\n        }\r\n        else {\r\n            pass=false;\r\n            break;\r\n        }\r\n    }\r\n    if (pass) {\r\n        return pass;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport default checkWin;\r\n","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\reset.tsx",["71","72"],"import React, { FunctionComponent } from 'react';\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction reset(gameBoard: IItem[][] | undefined) {\r\n    if (!gameBoard) {\r\n        return;\r\n    }\r\n    for (var i=0; i<5; i++) {\r\n        for (var j=0; j<5; j++) {\r\n            gameBoard[i][j].marked = false;\r\n            var id = \"\" + i + j;\r\n            var tmp = document.getElementById(id);\r\n            if (tmp) {\r\n                tmp.style.backgroundColor = \"red\";\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n\r\nexport default reset;","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\newItemInput.tsx",["73"],"import React, { FunctionComponent, useState } from 'react';\r\nimport IAddedItem from './structuers/addedItem';\r\n\r\nfunction NewItemInput(props: any) {\r\n    const [input, setInput] = useState(\"\");\r\n    const [items, setItems] = useState<IAddedItem[]>([]);\r\n\r\n    const handleChage = (e: any) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const noReload = (e: any) => {\r\n        e.preventDefault();\r\n    }\r\n    const handleCheck = (e: any) => {\r\n        //updates use at appropriate index on addedItems variable from app.tsx\r\n        props.onCheck(e.target.id);\r\n    }\r\n    \r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        setItems([...items, {value: input, use: false, id: items.length}])\r\n        props.onAdd({value: input, use: false, id: items.length});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={noReload}>\r\n                <input id=\"inputBox\" type=\"text\" placeholder=\"Enter a bingo tile\" onChange={handleChage} />\r\n            </form>\r\n            <button onClick={onSubmit}>Enter</button>\r\n            <div id=\"customInputDiv\">\r\n                {items.map(item => \r\n                                    <label className=\"customInput\" htmlFor={item.id.toString()}>{item.value}\r\n                                    <input type=\"checkbox\" id={item.id.toString()} onClick={handleCheck} />\r\n                                    <span className=\"checkmark\"></span>\r\n                                    <hr />\r\n                                    </label>\r\n                                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewItemInput;","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\about.tsx",["74","75","76","77","78","79","80","81"],"import React from 'react';\r\nimport GitHubLogo from './images/githubLogo.png';\r\nimport SteamLogo from './images/steamLogo.png';\r\nimport youTubeLogo from './images/youTubeLogo.png';\r\nimport redditLogo from './images/redditLogo.png';\r\n\r\nfunction About() {\r\n    \r\n    return (\r\n        <div id=\"about\">\r\n            <h3>This is based off a video made by <a href=\"https://www.youtube.com/channel/UCocHtA1ADT6kTObipYzJoww\">SunlessKhan</a></h3>\r\n            <h3>\r\n                <a href=\"https://www.youtube.com/watch?v=-3aVf_LilUc\" target=\"_blank\"><img className=\"logoLink\" src={youTubeLogo}></img></a>\r\n                <a href=\"https://www.reddit.com/r/RocketLeague/\" target=\"_blank\"><img className=\"logoLink\" src={redditLogo}></img></a>\r\n                </h3>\r\n            <h3>\r\n                <a href=\"https://github.com/JakeCapra/rl_bingo_typescript\" target=\"_blank\"><img className=\"logoLink\" src={GitHubLogo}></img></a>\r\n                <a href=\"https://steamcommunity.com/id/hip_dips/\" target=\"_blank\"><img className=\"logoLink\" src={SteamLogo}></img></a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\RankSelector.js",[],"C:\\Users\\hocke\\Desktop\\reactProjects\\rl_bingo_typescript\\src\\components\\winScreen.tsx",["82"],"import React from 'react';\r\nimport winVid from './images/winVideo.mp4';\r\n\r\nfunction WinScreen(props: any) {\r\n\r\n    return (\r\n        <div id=\"popup\">\r\n            <div id=\"popupInner\">  \r\n                <video width=\"80%\" height=\"auto\" autoPlay={true} loop={true} muted={true} id=\"winVid\" style={{float: 'left', margin: '1vw'}}>\r\n                    <source src={winVid} type=\"video/mp4\" />\r\n                </video>\r\n                <h2 style={{paddingTop: '5vw'}}>You Win!</h2>\r\n                <a href=\"https://www.reddit.com/r/RocketLeague/comments/9r1xjm/this_is_rocket_league_a_fanmade_animation/\" target=\"_blank\"><h3>Video Credit</h3></a>\r\n                <button onClick={props.closePopup}>Close</button>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WinScreen;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":22,"column":11,"nodeType":"89","messageId":"90","endLine":22,"endColumn":19},{"ruleId":"87","severity":1,"message":"91","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"92","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":48,"column":14,"nodeType":"89","messageId":"95","endLine":48,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":50,"column":19,"nodeType":"98","messageId":"99","endLine":50,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":50,"column":29,"nodeType":"98","messageId":"99","endLine":50,"endColumn":31},{"ruleId":"93","severity":1,"message":"100","line":53,"column":25,"nodeType":"89","messageId":"95","endLine":53,"endColumn":30},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"92","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"92","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"101","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":34},{"ruleId":"87","severity":1,"message":"101","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":13,"column":71,"nodeType":"104","endLine":13,"endColumn":86},{"ruleId":"105","severity":1,"message":"106","line":13,"column":87,"nodeType":"107","endLine":13,"endColumn":131},{"ruleId":"102","severity":1,"message":"103","line":14,"column":66,"nodeType":"104","endLine":14,"endColumn":81},{"ruleId":"105","severity":1,"message":"106","line":14,"column":82,"nodeType":"107","endLine":14,"endColumn":125},{"ruleId":"102","severity":1,"message":"103","line":17,"column":76,"nodeType":"104","endLine":17,"endColumn":91},{"ruleId":"105","severity":1,"message":"106","line":17,"column":92,"nodeType":"107","endLine":17,"endColumn":135},{"ruleId":"102","severity":1,"message":"103","line":18,"column":67,"nodeType":"104","endLine":18,"endColumn":82},{"ruleId":"105","severity":1,"message":"106","line":18,"column":83,"nodeType":"107","endLine":18,"endColumn":125},{"ruleId":"102","severity":1,"message":"103","line":13,"column":124,"nodeType":"104","endLine":13,"endColumn":139},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'testFunc' is assigned a value but never used.","Identifier","unusedVar","'defaultCipherList' is defined but never used.","'React' is defined but never used.","@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'index' is already defined.","'FunctionComponent' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]