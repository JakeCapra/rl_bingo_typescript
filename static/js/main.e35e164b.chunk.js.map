{"version":3,"sources":["components/images/dropshotbg.mp4","components/BingoItemRepository.js","components/loadTiles.tsx","components/checkWin.tsx","components/images/winVideo.mp4","components/winScreen.tsx","components/gameBoard.tsx","components/reset.tsx","components/newItemInput.tsx","components/images/githubLogo.png","components/images/steamLogo.png","components/images/youTubeLogo.png","components/images/redditLogo.png","components/about.tsx","components/RankSelector.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["itemsCollection","loadTiles","addedTiles","rankSelected","items","rowIndex","colIndex","value","marked","availableTiles","maxLevel","i","concat","GetBingoTileItems","usedIndex","usedIndexLoad","tileArr","length","use","push","console","log","insertAmt","index","Math","floor","random","includes","j","checkWin","gameBoard","pass","WinScreen","props","id","width","height","autoPlay","loop","muted","style","float","margin","src","winVid","type","paddingTop","href","target","onClick","closePopup","GameBoard","boardTiles","useState","showWin","setShowWin","togglePopup","cellSpacing","cellPadding","map","row","className","cell","backgroundColor","e","split","handleClick","text","reset","tmp","document","getElementById","NewItemInput","input","setInput","setItems","handleCheck","onCheck","onSubmit","preventDefault","placeholder","onChange","onAdd","item","htmlFor","toString","About","youTubeLogo","redditLogo","GitHubLogo","SteamLogo","RankSelector","updateRank","event","setState","onRankSelected","state","this","selected","React","Component","App","addedItems","setAddedItems","setRankSelected","bgvid","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6OAAe,MAA0B,uCC4BnCA,G,MAAkB,CA5BJ,CAAC,oBAAoB,wBAAwB,6BAA6B,mBAC1F,gBAAgB,WAAW,oBAAoB,2BAA4B,oBAAoB,wBAC/F,0BAA2B,mBAAmB,oBAAqB,sBAAsB,iBAAiB,iBAC1G,iBAAkB,qCAAsC,sBAAuB,2BAC/E,sCAAuC,8BAA+B,oCAAqC,gBAC3G,kCAAmC,uBAAwB,+CAAgD,aAC3G,mBAAoB,2BAA4B,UAAW,qBAAsB,qCACjF,wBAAyB,iCAAkC,2BAA4B,mBAAoB,mBAC3G,mBAAoB,0BAEJ,GAEA,CAAC,oBAAqB,mBAAoB,gBAAiB,eAE7D,GAEI,CAAC,cAAe,6CAEjB,CAAC,eAAgB,oBAEnB,CAAC,sCAAuC,kBAAmB,kBAAmB,mBAEzE,CAAC,aAAa,kBAAmB,mBAElC,CAAC,6BAEP,KC6CFC,MAjEf,SAAmBC,EAAsCC,GAGrD,IAAIC,EAAmB,CACnB,CAAC,CAACC,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,IACvQ,CAAC,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,IACvQ,CAAC,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,IACvQ,CAAC,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,IACvQ,CAAC,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,GAAQ,CAACH,SAAU,EAAGC,SAAU,EAAGC,MAAO,GAAIC,QAAQ,KAIvQC,EDuBD,SAA2BC,GAE9B,IADA,IAAIN,EAAQ,GACJO,EAAI,EAAGA,GAAKD,EAAUC,IAC1BP,EAAQA,EAAMQ,OAAOZ,EAAgBW,IAEzC,OAAOP,EC5BcS,CAAkBV,GACnCW,EAAsB,GACtBC,EAA0B,GAC1BC,EAAU,GAId,GAAId,EACA,IAAK,IAAIS,EAAE,EAAGA,EAAET,EAAWe,OAAQN,IAE3BT,EAAWS,GAAGO,KACdF,EAAQG,KAAKjB,EAAWS,GAAGJ,OAIvCa,QAAQC,IAAInB,GAGZ,IAAIoB,EAAY,GAAKN,EAAQC,OAC7B,IAAKN,EAAE,EAAGA,EAAEW,EAAWX,IAAK,CACxB,GAEI,IAAIY,EAAQC,KAAKC,MAAMD,KAAKE,SAAWjB,EAAeQ,cACjDF,EAAcY,SAASJ,IAChCR,EAAcI,KAAKI,GACnBP,EAAQG,KAAKV,EAAec,IAIhC,IAASZ,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIiB,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAS,GAALjB,GAAe,GAALiB,EAAQ,CAClB,GAEQL,EAAQC,KAAKC,MAAMD,KAAKE,SAAWV,EAAQC,cAC1CH,EAAUa,SAASJ,IAC5BT,EAAUK,KAAKI,GACfnB,EAAMO,GAAGiB,GAAGrB,MAAQS,EAAQO,GAC5BnB,EAAMO,GAAGiB,GAAGtB,SAAWK,EACvBP,EAAMO,GAAGiB,GAAGvB,SAAWuB,EAUnC,OALAxB,EAAM,GAAG,GAAGG,MAAQ,OACpBH,EAAM,GAAG,GAAGI,QAAS,EACrBJ,EAAM,GAAG,GAAGE,SAAW,EACvBF,EAAM,GAAG,GAAGC,SAAW,EAEhBD,GCIIyB,MApEf,SAAkBC,GAId,IAHA,IAAIC,GAAK,EAGApB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAK,IAAIiB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAIE,EAAUnB,GAAGiB,GAAGpB,OAGf,CACDuB,GAAK,EACL,MAJAA,GAAK,EAOb,GAAIA,EACA,OAAOA,EAKf,IAAKpB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAChB,IAAKiB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAChB,IAAIE,EAAUF,GAAGjB,GAAGH,OAGf,CACDuB,GAAK,EACL,MAJAA,GAAK,EAOb,GAAIA,EACA,OAAOA,EAKf,IAAKpB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAChB,IAAImB,EAAUnB,GAAGA,GAAGH,OAGf,CACDuB,GAAK,EACL,MAJAA,GAAK,EAOb,GAAIA,EACA,OAAOA,EAKX,IADAH,EAAI,EACCjB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAChB,IAAImB,EAAUnB,GAAGiB,GAAGpB,OAIf,CACDuB,GAAK,EACL,MALAA,GAAK,EACLH,IAOR,OAAIG,IAGG,GCnEI,MAA0B,qCCmB1BC,MAhBf,SAAmBC,GAEf,OACI,qBAAKC,GAAG,QAAR,SACI,sBAAKA,GAAG,aAAR,UACI,uBAAOC,MAAM,MAAMC,OAAO,OAAOC,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAML,GAAG,SAASM,MAAO,CAACC,MAAO,OAAQC,OAAQ,OAArH,SACI,wBAAQC,IAAKC,EAAQC,KAAK,gBAE9B,oBAAIL,MAAO,CAACM,WAAY,OAAxB,sBACA,mBAAGC,KAAK,mGAAmGC,OAAO,SAAlH,SAA2H,gDAC3H,wBAAQC,QAAShB,EAAMiB,WAAvB,yBCqCDC,EA7C4D,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAC3DC,oBAAS,GADkD,mBAClFC,EADkF,KACzEC,EADyE,KAGzF,IAAKH,EACD,OAAO,wBAGX,IAAMI,EAAc,WAChBD,GAAYD,IAqBhB,OACI,gCACA,uBAAOG,YAAY,IAAIC,YAAY,IAAnC,SACI,gCACKN,EAAWO,KAAI,SAAAC,GAAG,OAAI,oBAAIC,UAAU,MAAd,SAAqBD,EAAID,KAAI,SAAAG,GAAI,OAAI,oBAAI5B,GAAI,GAAK4B,EAAKxD,SAAWwD,EAAKzD,SAAUwD,UAAU,YAAYrB,MAAO,CAACuB,gBAAiB,OAAQd,QAAS,SAACe,GAAD,OAtBhK,SAACA,GACjB,IAAIrD,EAAIqD,EAAEhB,OAAOd,GAAG+B,MAAM,IAAI,GAC1BrC,EAAIoC,EAAEhB,OAAOd,GAAG+B,MAAM,IAAI,GAC9Bb,EAAWzC,GAAGiB,GAAGpB,QAAU4C,EAAWzC,GAAGiB,GAAGpB,OACL,QAAnCwD,EAAEhB,OAAOR,MAAMuB,gBACfC,EAAEhB,OAAOR,MAAMuB,gBAAkB,QAGjCC,EAAEhB,OAAOR,MAAMuB,gBAAkB,MAE3BlC,EAASuB,IAEfI,IAUmLU,CAAYF,IAA/H,SAAoIF,EAAKvD,oBAG5M+C,EACG,cAAE,EAAF,CAAYa,KAAK,qCAAqCjB,WAAYM,IAChE,SCtBCY,MAlBf,SAAetC,GACX,GAAKA,EAGL,IAAK,IAAInB,EAAE,EAAGA,EAAE,EAAGA,IACf,IAAK,IAAIiB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpBE,EAAUnB,GAAGiB,GAAGpB,QAAS,EACzB,IAAI0B,EAAK,GAAKvB,EAAIiB,EACdyC,EAAMC,SAASC,eAAerC,GAC9BmC,IACAA,EAAI7B,MAAMuB,gBAAkB,SC8B7BS,MAxCf,SAAsBvC,GAAa,IAAD,EACJoB,mBAAS,IADL,mBACvBoB,EADuB,KAChBC,EADgB,OAEJrB,mBAAuB,IAFnB,mBAEvBjD,EAFuB,KAEhBuE,EAFgB,KAUxBC,EAAc,SAACZ,GAEjB/B,EAAM4C,QAAQb,EAAEhB,OAAOd,KAS3B,OACI,gCACI,sBAAM4C,SAhBG,SAACd,GACdA,EAAEe,kBAeE,SACI,uBAAO7C,GAAG,WAAWW,KAAK,OAAOmC,YAAY,qBAAqBC,SApB1D,SAACjB,GACjBU,EAASV,EAAEhB,OAAOzC,YAqBd,wBAAQ0C,QAXC,SAACe,GACdA,EAAEe,iBACFJ,EAAS,GAAD,mBAAKvE,GAAL,CAAY,CAACG,MAAOkE,EAAOvD,KAAK,EAAOgB,GAAI9B,EAAMa,WACzDgB,EAAMiD,MAAM,CAAC3E,MAAOkE,EAAOvD,KAAK,EAAOgB,GAAI9B,EAAMa,UAQ7C,mBACA,qBAAKiB,GAAG,iBAAR,SACK9B,EAAMuD,KAAI,SAAAwB,GAAI,OACK,wBAAOtB,UAAU,cAAcuB,QAASD,EAAKjD,GAAGmD,WAAhD,UAA6DF,EAAK5E,MAClE,uBAAOsC,KAAK,WAAWX,GAAIiD,EAAKjD,GAAGmD,WAAYpC,QAAS2B,IACxD,sBAAMf,UAAU,cAChB,mCCnCrB,MAA0B,uCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,uCCuB1ByB,MAjBf,WAEI,OACI,sBAAKpD,GAAG,QAAR,UACI,oEAAsC,mBAAGa,KAAK,2DAAR,4BACtC,+BACI,mBAAGA,KAAK,8CAA8CC,OAAO,SAA7D,SAAsE,qBAAKa,UAAU,WAAWlB,IAAK4C,MACrG,mBAAGxC,KAAK,yCAAyCC,OAAO,SAAxD,SAAiE,qBAAKa,UAAU,WAAWlB,IAAK6C,SAEpG,+BACI,mBAAGzC,KAAK,mDAAmDC,OAAO,SAAlE,SAA2E,qBAAKa,UAAU,WAAWlB,IAAK8C,MAC1G,mBAAG1C,KAAK,0CAA0CC,OAAO,SAAzD,SAAkE,qBAAKa,UAAU,WAAWlB,IAAK+C,a,8BCelGC,E,kDA7BX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IAKV2D,WAAa,SAACC,GACV,EAAKC,SAAS,CAAEvF,MAAOsF,EAAM7C,OAAOzC,QACpC,EAAK0B,MAAM8D,eAAeF,EAAM7C,OAAOzC,QANvC,EAAKyF,MAAQ,CACTzF,MAAO,GAHI,E,qDAYf,OACI,yBAAQ0E,SAAUgB,KAAKL,WAAvB,UACI,wBAAQrF,MAAM,IAAI2F,UAAQ,EAA1B,gCACA,wBAAQ3F,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,wB,GAxBW4F,IAAMC,WC0DlBC,MAhDf,WAAgB,IAAD,EACahD,qBADb,mBACNjD,EADM,KACCuE,EADD,OAEuBtB,mBAAuB,IAF9C,mBAENiD,EAFM,KAEMC,EAFN,OAG2BlD,mBAAS,GAHpC,mBAGNlD,EAHM,KAGQqG,EAHR,KA2BX,OACI,gCACE,uBAAOnE,UAAU,EAAMC,MAAM,EAAMC,OAAO,EAAML,GAAG,QAAnD,SACG,wBAAQS,IAAK8D,EAAO5D,KAAK,gBAE5B,sBAAKX,GAAG,UAAR,UACI,8DACA,wBAAQe,QA7BA,WAEd0B,EAAS1E,EAAUqG,EAAYnG,KA2BzB,0BACA,wBAAQ8C,QAAS,kBAAMmB,EAAMhE,IAA7B,mBACA,cAAC,EAAD,CAAc2F,eAfxB,SAA0BxF,GACtBiG,EAAgBjG,MAgBV,cAAC,EAAD,CAAc2E,MA1BxB,SAAqBwB,GAEjBH,EAAc,GAAD,mBAAKD,GAAL,CAAiBI,MAwBU7B,QAtB5C,SAAuB3C,GAEnBoE,EAAWpE,GAAIhB,KAAOoF,EAAWpE,GAAIhB,IACrCqF,EAAcD,MAoBR,cAAC,EAAD,OAEJ,qBAAKpE,GAAG,WAAR,SACE,cAAC,EAAD,CAAWkB,WAAYhD,UCxCpBuG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASC,eAAe,SAM1BoC,M","file":"static/js/main.e35e164b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dropshotbg.7257290a.mp4\";","const sharedItems = [\"Score a Hat Trick\",\"Opponent has Anime PP\",\"Someone Missed an Open Net\",\"Toxicity in Chat\", \r\n    \"Pre-flip Goal\",\"Low Five\",\"Someone own Goals\",\"Opponent Using Weird Car\", \"3 Minute Overtime\",\"Score a 0 Second Goal\",\r\n    \"Opponent rage quit (ff)\", \"Get into Rule #1\",\"Make an Epic Save\", \"Get a Lag Indicator\",\"Someone whiffs\",\"Bump/Demo Goal\", \r\n    \"You Miss Boost\", \"Map is Salty Shores (day or night)\", \"Team Double Commits\", \"Opponents Double Commits\", \r\n    \"Someone's using Poof Goal Explosion\", \"Have the Best Ping in Lobby\", \"Score 2 Goals in the first Minute\", \"Whiff a Flick\",\r\n    \"Someone's using an Esport Decal\", \"Score an Air Dribble\", \"Champions Field Announcer says 'What a Save'\", \"Get demoed\",\r\n    \"Hit the crossbar\", \"Someone gets a ghost hit\", \"Get MVP\", \"Score a flick goal\", \"Someone complains about a teammate\",\r\n    \"Someone steals a goal\", \"Opponent has LFT in their name\", \"Someone's using a topper\", \"Map is Neo Tokyo\", \"Map is Wasteland\",\r\n    \"Map is Farmstead\", \"Someone has a GC title\"];\r\n\r\nconst bronzeItems = [];\r\n\r\nconst silverItems = [\"Passing Play Goal\", \"Fake an Opponent\", \"Get 3 Assists\", \"Get 3 Saves\"];\r\n\r\nconst goldItems = [];\r\n\r\nconst platinumItems = [\"Turtle Goal\", \"Someone says they should be ranked higher\"];\r\n\r\nconst diamondItems = [\"Ceiling Shot\", \"Musty Flick Goal\"];\r\n\r\nconst champItems = [\"Demo Both Opponents (In succession)\", \"Team Pinch Goal\", \"Flip-Reset Goal\", \"Double Tap Goal\"];\r\n\r\nconst grandChampItems = [\"High Five!\",\"Flip-Reset Goal\", \"Double Tap Goal\"];\r\n\r\nconst celebrityItems = [\"Get Asked to Sign Profile\"];\r\n\r\nconst proItems = [];\r\n\r\nconst itemsCollection = [\r\n    sharedItems,\r\n    bronzeItems,\r\n    silverItems,\r\n    goldItems,\r\n    platinumItems,\r\n    diamondItems,\r\n    champItems,\r\n    grandChampItems,\r\n    celebrityItems,\r\n    proItems\r\n]\r\n\r\nexport function GetBingoTileItems(maxLevel) {\r\n    var items = [];\r\n    for(var i = 0; i <= maxLevel; i++) {\r\n        items = items.concat(itemsCollection[i]);\r\n    }\r\n    return items;\r\n}","import { defaultCipherList } from 'constants';\r\nimport React from 'react';\r\nimport { GetBingoTileItems } from './BingoItemRepository';\r\nimport IAddedItem from './structuers/addedItem'\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction loadTiles(addedTiles: IAddedItem[] | undefined, rankSelected: number) {\r\n   \r\n    // defining the array like this is the only way it works, idk why, just dont look at it\r\n    let items: IItem[][] = [\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n        [{rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}, {rowIndex: 0, colIndex: 0, value: \"\", marked: false}],\r\n    ]\r\n    \r\n    // array of strings\r\n    var availableTiles = GetBingoTileItems(rankSelected);\r\n    var usedIndex: number[] = [];\r\n    var usedIndexLoad: number[] = [];\r\n    let tileArr = []; // tiles to added to board\r\n    \r\n    \r\n    // for user added tiles\r\n    if (addedTiles) {\r\n        for (var i=0; i<addedTiles.length; i++) {\r\n            \r\n            if (addedTiles[i].use) {\r\n                tileArr.push(addedTiles[i].value);\r\n            }\r\n        } \r\n    }\r\n    console.log(addedTiles);\r\n\r\n    // if user added tiles have already been added to addedTiles\r\n    var insertAmt = 24 - tileArr.length;\r\n    for (i=0; i<insertAmt; i++) {\r\n        do\r\n        {\r\n            var index = Math.floor(Math.random() * availableTiles.length);\r\n        } while (usedIndexLoad.includes(index));\r\n        usedIndexLoad.push(index);\r\n        tileArr.push(availableTiles[index]);\r\n    }\r\n\r\n    // i is col, j is row\r\n    for (var i = 0; i < 5; i++) {\r\n        for (var j = 0; j < 5; j++) {\r\n            if (i != 2 || j != 2) {\r\n                do\r\n                {\r\n                    var index = Math.floor(Math.random() * tileArr.length);\r\n                } while (usedIndex.includes(index));\r\n                usedIndex.push(index);\r\n                items[i][j].value = tileArr[index];\r\n                items[i][j].colIndex = i;\r\n                items[i][j].rowIndex = j;\r\n            }\r\n        }\r\n    }\r\n\r\n    items[2][2].value = \"Free\";\r\n    items[2][2].marked = false;\r\n    items[2][2].colIndex = 2;\r\n    items[2][2].rowIndex = 2;\r\n\r\n    return items;\r\n}\r\n\r\n\r\nexport default loadTiles;","import React from 'react';\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction checkWin(gameBoard: IItem[][]) {\r\n    var pass=false;\r\n    \r\n    //horizontal check\r\n    for (var i=0; i<5; i++) {\r\n        for (var j=0; j<5; j++) {\r\n            if (gameBoard[i][j].marked) {\r\n                pass=true;\r\n            }\r\n            else {\r\n                pass=false;\r\n                break;\r\n            }\r\n        }\r\n        if (pass) {\r\n            return pass;\r\n        }\r\n    }\r\n\r\n    //vertical check\r\n    for (i=0; i<5; i++) {\r\n        for (j=0; j<5; j++) {\r\n            if (gameBoard[j][i].marked) {\r\n                pass=true;\r\n            }\r\n            else {\r\n                pass=false;\r\n                break;\r\n            }\r\n        }\r\n        if (pass) {\r\n            return pass;\r\n        }\r\n    }\r\n\r\n    //diagonal check - left to right\r\n    for (i=0; i<5; i++) {\r\n        if (gameBoard[i][i].marked) {\r\n            pass=true;\r\n        }\r\n        else {\r\n            pass=false;\r\n            break;\r\n        }\r\n    }\r\n    if (pass) {\r\n        return pass;\r\n    }\r\n\r\n    //diagonal check - right to left\r\n    j = 4;\r\n    for (i=0; i<5; i++) {\r\n        if (gameBoard[i][j].marked) {\r\n            pass=true;\r\n            j--;\r\n        }\r\n        else {\r\n            pass=false;\r\n            break;\r\n        }\r\n    }\r\n    if (pass) {\r\n        return pass;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport default checkWin;\r\n","export default __webpack_public_path__ + \"static/media/winVideo.de23d72e.mp4\";","import React from 'react';\r\nimport winVid from './images/winVideo.mp4';\r\n\r\nfunction WinScreen(props: any) {\r\n\r\n    return (\r\n        <div id=\"popup\">\r\n            <div id=\"popupInner\">  \r\n                <video width=\"80%\" height=\"auto\" autoPlay={true} loop={true} muted={true} id=\"winVid\" style={{float: 'left', margin: '1vw'}}>\r\n                    <source src={winVid} type=\"video/mp4\" />\r\n                </video>\r\n                <h2 style={{paddingTop: '5vw'}}>You Win!</h2>\r\n                <a href=\"https://www.reddit.com/r/RocketLeague/comments/9r1xjm/this_is_rocket_league_a_fanmade_animation/\" target=\"_blank\"><h3>Video Credit</h3></a>\r\n                <button onClick={props.closePopup}>Close</button>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WinScreen;","import React, { FunctionComponent, useState } from 'react';\r\nimport IItems from './structuers/tileItem';\r\nimport checkWin from './checkWin';\r\nimport WinScreen from './winScreen';\r\n\r\nconst GameBoard: FunctionComponent<{boardTiles: IItems[][] | undefined}> = ({boardTiles}) => {\r\n    const [showWin, setShowWin] = useState(false);\r\n\r\n    if (!boardTiles) {\r\n        return <div></div>\r\n    }\r\n\r\n    const togglePopup = () => {\r\n        setShowWin(!showWin);\r\n    }\r\n    \r\n    const handleClick = (e: any) => {\r\n        var i = e.target.id.split(\"\")[0];\r\n        var j = e.target.id.split(\"\")[1];\r\n        boardTiles[i][j].marked = !boardTiles[i][j].marked;\r\n        if (e.target.style.backgroundColor === \"red\") {\r\n            e.target.style.backgroundColor = \"green\";\r\n        }\r\n        else {\r\n            e.target.style.backgroundColor = \"red\";\r\n        }\r\n        var win = checkWin(boardTiles);\r\n        if (win) {\r\n            togglePopup();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <table cellSpacing=\"0\" cellPadding=\"0\">\r\n            <tbody>\r\n                {boardTiles.map(row => <tr className=\"row\">{row.map(cell => <th id={\"\" + cell.colIndex + cell.rowIndex} className=\"boardItem\" style={{backgroundColor: 'red'}} onClick={(e) => handleClick(e)}>{cell.value}</th>)}</tr>)}\r\n            </tbody>\r\n        </table>\r\n        {showWin ?  \r\n            < WinScreen text='Click \"Close Button\" to hide popup' closePopup={togglePopup} />  \r\n            : null}\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default GameBoard;","import React, { FunctionComponent } from 'react';\r\nimport IItem from './structuers/tileItem';\r\n\r\nfunction reset(gameBoard: IItem[][] | undefined) {\r\n    if (!gameBoard) {\r\n        return;\r\n    }\r\n    for (var i=0; i<5; i++) {\r\n        for (var j=0; j<5; j++) {\r\n            gameBoard[i][j].marked = false;\r\n            var id = \"\" + i + j;\r\n            var tmp = document.getElementById(id);\r\n            if (tmp) {\r\n                tmp.style.backgroundColor = \"red\";\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n\r\nexport default reset;","import React, { FunctionComponent, useState } from 'react';\r\nimport IAddedItem from './structuers/addedItem';\r\n\r\nfunction NewItemInput(props: any) {\r\n    const [input, setInput] = useState(\"\");\r\n    const [items, setItems] = useState<IAddedItem[]>([]);\r\n\r\n    const handleChage = (e: any) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const noReload = (e: any) => {\r\n        e.preventDefault();\r\n    }\r\n    const handleCheck = (e: any) => {\r\n        //updates use at appropriate index on addedItems variable from app.tsx\r\n        props.onCheck(e.target.id);\r\n    }\r\n    \r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        setItems([...items, {value: input, use: false, id: items.length}])\r\n        props.onAdd({value: input, use: false, id: items.length});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={noReload}>\r\n                <input id=\"inputBox\" type=\"text\" placeholder=\"Enter a bingo tile\" onChange={handleChage} />\r\n            </form>\r\n            <button onClick={onSubmit}>Enter</button>\r\n            <div id=\"customInputDiv\">\r\n                {items.map(item => \r\n                                    <label className=\"customInput\" htmlFor={item.id.toString()}>{item.value}\r\n                                    <input type=\"checkbox\" id={item.id.toString()} onClick={handleCheck} />\r\n                                    <span className=\"checkmark\"></span>\r\n                                    <hr />\r\n                                    </label>\r\n                                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewItemInput;","export default __webpack_public_path__ + \"static/media/githubLogo.c7f632ed.png\";","export default __webpack_public_path__ + \"static/media/steamLogo.1b80f698.png\";","export default __webpack_public_path__ + \"static/media/youTubeLogo.e8b24b34.png\";","export default __webpack_public_path__ + \"static/media/redditLogo.e987f598.png\";","import React from 'react';\r\nimport GitHubLogo from './images/githubLogo.png';\r\nimport SteamLogo from './images/steamLogo.png';\r\nimport youTubeLogo from './images/youTubeLogo.png';\r\nimport redditLogo from './images/redditLogo.png';\r\n\r\nfunction About() {\r\n    \r\n    return (\r\n        <div id=\"about\">\r\n            <h3>This is based off a video made by <a href=\"https://www.youtube.com/channel/UCocHtA1ADT6kTObipYzJoww\">SunlessKhan</a></h3>\r\n            <h3>\r\n                <a href=\"https://www.youtube.com/watch?v=-3aVf_LilUc\" target=\"_blank\"><img className=\"logoLink\" src={youTubeLogo}></img></a>\r\n                <a href=\"https://www.reddit.com/r/RocketLeague/\" target=\"_blank\"><img className=\"logoLink\" src={redditLogo}></img></a>\r\n                </h3>\r\n            <h3>\r\n                <a href=\"https://github.com/JakeCapra/rl_bingo_typescript\" target=\"_blank\"><img className=\"logoLink\" src={GitHubLogo}></img></a>\r\n                <a href=\"https://steamcommunity.com/id/hip_dips/\" target=\"_blank\"><img className=\"logoLink\" src={SteamLogo}></img></a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass RankSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: 0\r\n        }\r\n    }\r\n    updateRank = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        this.props.onRankSelected(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <select onChange={this.updateRank}>\r\n                <option value=\"0\" selected>(Select your Rank)</option>\r\n                <option value=\"1\">Bronze</option>\r\n                <option value=\"2\">Silver</option>\r\n                <option value=\"3\">Gold</option>\r\n                <option value=\"4\">Platinum</option>\r\n                <option value=\"5\">Diamond</option>\r\n                <option value=\"6\">Champ</option>\r\n                <option value=\"7\">Grand Champ</option>\r\n                <option value=\"8\">Celebrity</option>\r\n                <option value=\"9\">Pro</option>\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RankSelector","import React, { useState } from 'react';\nimport bgvid from './components/images/dropshotbg.mp4';\nimport './App.css';\nimport IItem from './components/structuers/tileItem';\nimport IAddedItem from './components/structuers/addedItem';\nimport loadTiles from './components/loadTiles';\nimport GameBoard from './components/gameBoard';\nimport reset from './components/reset';\nimport NewItemInput from './components/newItemInput';\nimport About from './components/about';\nimport RankSelector from './components/RankSelector'\n\nfunction App() {\n  const [items, setItems] = useState<IItem[][]>();\n  const [addedItems, setAddedItems] = useState<IAddedItem[]>([]);//user added items\n  const [rankSelected, setRankSelected] = useState(0);\n    \n    const loadItems = () => {\n        //loads tiles into items\n        setItems(loadTiles(addedItems, rankSelected))\n    }\n    const testFunc = () => {\n        console.log(addedItems);\n    }\n    function handleAdded(newValue: IAddedItem) {\n        // gets called when user adds a new tile\n        setAddedItems([...addedItems, newValue])\n    }\n    function handleChecked(id: any) {\n        // gets called from newUserInput.tsx when checkbox is clicked\n        addedItems[id].use = !addedItems[id].use\n        setAddedItems(addedItems);\n    }\n    function handleRankChange(value: number) {\n        setRankSelected(value);\n    }\n\n\n\n    return (\n        <div>\n          <video autoPlay={true} loop={true} muted={true} id=\"bgVid\">\n             <source src={bgvid} type=\"video/mp4\" />\n          </video>\n          <div id=\"leftDiv\">\n              <h2>This is Rocket League Bingo!</h2>\n              <button onClick={loadItems}>Create Board</button>\n              <button onClick={() => reset(items)}>Reset</button>\n              <RankSelector onRankSelected={handleRankChange}/>\n              {/* <button onClick={testFunc}>TEST BUTTON</button> */}\n              <NewItemInput onAdd={handleAdded} onCheck={handleChecked}/>\n              <About />\n          </div>\n          <div id=\"rightDiv\">\n            <GameBoard boardTiles={items}/>\n          </div>\n       </div>\n    )\n }\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}